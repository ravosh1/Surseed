@model Surseed.Models.OrganisitaionModel.Resistraion

@{
    ViewBag.Title = "SignUp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--================Home Banner Area =================-->
<section class="banner_area">
    <div class="banner_inner d-flex align-items-center">
        <div class="overlay bg-parallax" data-stellar-ratio="0.9" data-stellar-vertical-offset="0" data-background=""></div>
        <div class="container">
            <div class="banner_content text-center">
                <h2>Organization SignUp</h2>
            </div>
        </div>
    </div>
</section>
<!--================End Home Banner Area =================-->
<!--Volunteer About Area Start-->
<div class="volunteer-about-area pt-100">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-12 col-lg-6">
                <!--Volunteer About Image Area Start-->
                <div class="about-img-area img-full">
                    <div class="img-title">
                        <img src="@Url.Content("~/img/about1.png")" alt="">
                    </div>
                </div>
                <!--Volunteer About Image Area End-->
            </div>
            <div class="col-md-12 col-lg-6">
                <!--Volunteer About Content Area Start-->
                <div class="volunteer-about-content">
                    <h2>Register as a Organization</h2>
                    <h3>Join The Winning Team</h3>
                    <p>It allows you to gather donation from donors to help your creative organization. Donations will be deposited to your bank account on the next business day.</p>
                </div>
                <!--Volunteer About Content Area End-->
            </div>
        </div>
    </div>
</div>
<!--Volunteer About Area End-->
<!--Volunteer Signup Area Start-->
<div class="volunteer-signup-area pt-90 pb-75 gray-bg">
    <div class="container">
        <div class="row">

            @if (TempData.Count > 0)
            {
                if (TempData["SignUpERROR"] != null && !string.IsNullOrWhiteSpace(TempData["SignUpERROR"].ToString()))
                {
                    <div class="alert alert-danger">
                        <i class="glyphicon glyphicon-ban-circle alert-icon"></i>@TempData["SignUpERROR"]
                    </div>
                }

                if (TempData["SignUpsuccess"] != null && !string.IsNullOrWhiteSpace(TempData["SignUpsuccess"].ToString()))
                {
                    <div class="alert alert-success">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                        <i class="fa fa-check alert-icon"></i><strong>Well done!</strong> @TempData["SignUpsuccess"]
                    </div>
                }
            }
            <div class="col-md-12">
                <div class="signup-title">
                    <h2>Register Your <span>Organization Now</span></h2>
                </div>
                <div class="volunteer-form">
                    <div class="volunteer-form-title">
                        <h3>Find your Organization</h3>
                    </div>
                    <form  method="post">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="volunteer-form-style mb-20">
                                    <input name="name" class="form-control" placeholder="Organization Name" type="text">

                               
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="volunteer-form-style mb-20">
                                    <input name="phone" class="form-control" placeholder="Organization Contact Number" type="text">
                                  
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <h5 class="green-bg text-white p-10">Organization Information</h5>
                            </div>
                            <div class="col-lg-6">
                                <div class="volunteer-form-style mb-20">
                                    @Html.TextBoxFor(model => model.OrganizationName, new { @class = "form-control", @placeholder = "Organization Name", @required = "true" })
                                    <span style="color: red">@Html.ValidationMessageFor(model => model.OrganizationName)</span>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="volunteer-form-style mb-20">
                                    @Html.TextBoxFor(model => model.OrgContactNumber, new { @class = "form-control", @placeholder = "Organization Contact Number", @required = "true" })
                                    <span style="color: red">@Html.ValidationMessageFor(model => model.OrgContactNumber)</span>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="volunteer-form-style mb-20">

                                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @required = "true", @id = "geolocation", @placeholder = "Enter Address" })
                                    <p class="errormsg" style="color: #EC1212;">@Html.ValidationMessageFor(model => model.Address)</p>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="volunteer-form-style mb-20">
                                    @Html.TextBoxFor(model => model.City, new { @class = "form-control", @required = "true", @id = "locality", @placeholder = "Enter City" })
                                    <p class="errormsg" style="color: #EC1212;">@Html.ValidationMessageFor(model => model.City)</p>
                                </div>
                            </div>

                            <div class="col-lg-6">
                                <div class="volunteer-form-style mb-20">
                                    @Html.TextBoxFor(model => model.State, new { @class = "form-control", @id = "administrative_area_level_1", @placeholder = "Enter State" })
                                    <p class="errormsg" style="color: #EC1212;">@Html.ValidationMessageFor(model => model.State)</p>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="volunteer-form-style mb-20">
                                    @Html.TextBoxFor(model => model.Zip, new { @class = "form-control", @id = "postal_code", @placeholder = "Enter PostCode", @required = "true" })
                                    <p class="errormsg" style="color: #EC1212;">@Html.ValidationMessageFor(model => model.Zip)</p>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-12">
                                <div class="volunteer-form-style mb-20">
                                  
                                    @Html.TextBoxFor(model => model.EIN, new { @class = "form-control", @placeholder = "EIN#", @required = "true" })
                                    <span style="color: red">@Html.ValidationMessageFor(model => model.EIN)</span>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-12">
                                <div class="volunteer-form-style mb-20">

                                    @Html.TextBoxFor(model => model.TAXID, new { @class = "form-control", @placeholder = "TAX ID# & RC# - Non-US", @required = "true" })
                                    <span style="color: red">@Html.ValidationMessageFor(model => model.TAXID)</span>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <h5 class="green-bg text-white p-10">Profile Creator Information</h5>
                            </div>
                            <div class="col-lg-4 mb-20">
                                <div class="volunteer-form-style">
                                    @Html.DropDownListFor(model => model.OrganizationUserTyepId, (IEnumerable<SelectListItem>)ViewBag.OrgUsrTypeList, "---Select  Type---", new { @class = "form-control", @required = "True" })

                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="volunteer-form-style mb-20">
                                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @placeholder = "First Name", @required = "true" })
                                    <span style="color: red">@Html.ValidationMessageFor(model => model.FirstName)</span>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="volunteer-form-style mb-20">
                                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @placeholder = "Last Name", @required = "true" })
                                    <span style="color: red">@Html.ValidationMessageFor(model => model.LastName)</span>
                                </div>
                            </div>
                            <div class="col-lg-2 mb-20">
                                <div class="volunteer-form-style">
                      
                                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem> { new SelectListItem { Text = "Male", Value = "Male" },
                                                                            new SelectListItem { Text = "Female", Value = "Female" } }, "Select Gender", new { @class = "formcontrol", @required = "true" })
                            
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="volunteer-form-style mb-20">
                                    @Html.TextBoxFor(model => model.Age, new { @class = "form-control", @placeholder = "Age", @required = "true", @onkeypress = "return isNumber(event,this);" })
                                    <span style="color: red">@Html.ValidationMessageFor(model => model.Age)</span>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="volunteer-form-style mb-20">
                                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @placeholder = "Phone Number", @required = "true", @onkeypress = "return isNumber(event,this);" })
                                    <span style="color: red">@Html.ValidationMessageFor(model => model.Phone)</span>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="volunteer-form-style mb-20">
                                    @Html.TextBoxFor(model => model.EmailId, new { @type = "email", @class = "form-control", @placeholder = "Email Address", @required = "true" })
                                    <span style="color: red">@Html.ValidationMessageFor(model => model.EmailId)</span>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="volunteer-form-style mb-20">
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Password", @required = "true" })
                                    <span style="color: red">@Html.ValidationMessageFor(model => model.Password)</span>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="volunteer-form-style mb-20">
                                    @Html.PasswordFor(model => model.ConfPassword, new { @class = "form-control", @placeholder = "Retype Password", @required = "true" })
                                    <span style="color: red">@Html.ValidationMessageFor(model => model.ConfPassword)</span>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="volunteer-form-style text-center">
                                    <button class="sent-btn" type="submit">Register Now</button>
                                    <hr />
                                    <p>Already registered! <a href="@Url.Action("SignIn","Organisation")">Login Here</a></p>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Volunteer Signup Area End-->

<script type="text/javascript">

    function isNumber(evt, element) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (
            (charCode != 46 || $(element).val().indexOf('.') != -1) &&      // “.” CHECK DOT, AND ONLY ONE.
            (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
</script>


<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDF8I_evWUUrTskNcc6UhNmxjiEbAdLyhc&v=3.exp&signed_in=true&libraries=places"></script>

<script type="text/javascript">
    var placeSearch, autocomplete;
    var componentForm = {
        //street_number: 'short_name',
        //route: 'long_name',
        locality: 'long_name',
        //administrative_area_level_2: 'long_name',
        administrative_area_level_1: 'long_name',
        country: 'long_name',
        postal_code: 'short_name'
    };



    google.maps.event.addDomListener(window, 'load', function () {
        //===========================Source==========================
        var places = new google.maps.places.Autocomplete(document.getElementById('geolocation'));
        google.maps.event.addListener(places, 'place_changed', function () {
            var place = places.getPlace();
            var address = place.formatted_address;
            var value = address.split(",");
            count = value.length;
            country = value[count - 1];
            state = value[count - 2];
            city = value[count - 3];
            var z = state.split(" ");
            //document.getElementById("Country").value = country;
            var i = z.length;
            //document.getElementById("City").value = city;
            var latitude = place.geometry.location.lat();
            var longitude = place.geometry.location.lng();
            var mesg = address;
            document.getElementById("geolocation").value = mesg;
            var lati = latitude;
            console.log(lati);
            console.log(longi);
            //document.getElementById("Origin_Lat").value = lati;
            var longi = longitude;
            //document.getElementById("Origin_Long").value = longi;
            //GetAddress(lati, longi, 'FromPostCode');

            console.log(place.address_components);
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];

                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById(addressType).value = val;
                }
            }

        });
        //============================Destination========================

    });
</script>

